# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from proto import auth_pb2 as auth__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in auth_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AuthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/auth.Auth/RegisterUser',
                request_serializer=auth__pb2.AuthRegisterRequest.SerializeToString,
                response_deserializer=auth__pb2.AuthRegisterResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/auth.Auth/LoginUser',
                request_serializer=auth__pb2.AuthLoginRequest.SerializeToString,
                response_deserializer=auth__pb2.AuthLoginResponse.FromString,
                _registered_method=True)
        self.RefreshAccessToken = channel.unary_unary(
                '/auth.Auth/RefreshAccessToken',
                request_serializer=auth__pb2.RefreshAccessTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.RefreshAccessTokenResponse.FromString,
                _registered_method=True)
        self.CurrentUser = channel.unary_unary(
                '/auth.Auth/CurrentUser',
                request_serializer=auth__pb2.CurrentUserRequest.SerializeToString,
                response_deserializer=auth__pb2.CurrentUserResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/auth.Auth/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=auth__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class AuthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshAccessToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CurrentUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=auth__pb2.AuthRegisterRequest.FromString,
                    response_serializer=auth__pb2.AuthRegisterResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=auth__pb2.AuthLoginRequest.FromString,
                    response_serializer=auth__pb2.AuthLoginResponse.SerializeToString,
            ),
            'RefreshAccessToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshAccessToken,
                    request_deserializer=auth__pb2.RefreshAccessTokenRequest.FromString,
                    response_serializer=auth__pb2.RefreshAccessTokenResponse.SerializeToString,
            ),
            'CurrentUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CurrentUser,
                    request_deserializer=auth__pb2.CurrentUserRequest.FromString,
                    response_serializer=auth__pb2.CurrentUserResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=auth__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'auth.Auth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('auth.Auth', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Auth(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary( # type: ignore
            request,
            target,
            '/auth.Auth/RegisterUser',
            auth__pb2.AuthRegisterRequest.SerializeToString,
            auth__pb2.AuthRegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary( # type: ignore
            request,
            target,
            '/auth.Auth/LoginUser',
            auth__pb2.AuthLoginRequest.SerializeToString,
            auth__pb2.AuthLoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshAccessToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary( # type: ignore
            request,
            target,
            '/auth.Auth/RefreshAccessToken',
            auth__pb2.RefreshAccessTokenRequest.SerializeToString,
            auth__pb2.RefreshAccessTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CurrentUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary( # type: ignore
            request,
            target,
            '/auth.Auth/CurrentUser',
            auth__pb2.CurrentUserRequest.SerializeToString,
            auth__pb2.CurrentUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary( # type: ignore
            request,
            target,
            '/auth.Auth/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            auth__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
